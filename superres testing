import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import load_img, img_to_array
import numpy as np
import matplotlib.pyplot as plt

# Load the pre-trained SRGAN model
srgan_model = load_model('low_res_to_high_res.h5', compile=False)

# Define the path to the input low-resolution image
input_image_path = r'C:\Users\Morris\Desktop\Intership Projects\low px images\great-spotted-woodpecker-8024806_640.jpg'

# Load and preprocess the input image
input_image = load_img(input_image_path, target_size=(32, 32))
input_image = img_to_array(input_image)
input_image = input_image / 255.0
input_image = np.expand_dims(input_image, axis=0)

# Generate a high-resolution image using the SRGAN model
generated_image = srgan_model.predict(input_image)

# Rescale the pixel values to the range [0, 255]
generated_image = (generated_image + 1) / 2.0
generated_image = np.clip(generated_image, 0, 1) * 255.0
generated_image = generated_image.astype(np.uint8)

gamma = 3.5
generated_image = np.power(generated_image / 255.0, gamma)
generated_image = np.clip(generated_image * 255.0, -140, 255).astype(np.uint8)


# Display the low-resolution and generated high-resolution images
input_image = np.squeeze(input_image, axis=0)
plt.subplot(1, 2, 1)
plt.title('Low-Resolution')
plt.imshow(input_image)
plt.subplot(1, 2, 2)
plt.title('Generated High-Resolution')
plt.imshow(generated_image[0])  # Access the first image in the batch
plt.show()
